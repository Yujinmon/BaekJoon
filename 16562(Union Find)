import java.util.*;
import java.io.*;

public class Main {
    static int money[], parent[];
    static int N, M, K;

    public static void union(int a, int b) {
        int parenta = find(a);
        int parentb = find(b);

        if(parenta != parentb) {
            if(parenta < parentb) {
                parent[parentb] = parenta;
            }else{
                parent[parenta] = parentb;
            }
        }
    }
    public static int find(int a) {
        if(parent[a] == a) {
            return a;
        }else{
            return find(parent[a]);
        }
    }

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st;

        st = new StringTokenizer(br.readLine());
        N = Integer.parseInt(st.nextToken());
        M = Integer.parseInt(st.nextToken());
        K = Integer.parseInt(st.nextToken());

        money = new int[N + 1];
        parent = new int[N + 1];

        st = new StringTokenizer(br.readLine());
        for(int i = 1; i < N + 1; i++) {
            money[i] = Integer.parseInt(st.nextToken());
            parent[i] = i;
        }

        for(int i = 0; i < M; i++) {
            st = new StringTokenizer(br.readLine());
            int v = Integer.parseInt(st.nextToken());
            int w = Integer.parseInt(st.nextToken());

            union(v, w);
        }

        int result = 0;
        for(int i = 1; i < N + 1; i++) {
            int min = Integer.MAX_VALUE;
            for(int j = 1; j < N + 1; j++) {
                if(find(j) == i) {
                    min = Math.min(min, money[j]);
                }
            }

            if(min != Integer.MAX_VALUE) {
                result += min;
            }
        }

        if(result <= K){
            System.out.println(result);
        }else{
            System.out.println("Oh no");
        }
    }
}
